<Window x:Class="Configurator.WPF.Views.ConfiguratorView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Configurator.WPF.Views"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:commonData="clr-namespace:Common.Data;assembly=Common"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Configurator" Height="460" Width="250"
        prism:ViewModelLocator.AutoWireViewModel="True" ResizeMode="NoResize">

    <Window.Resources>
        <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="commonData:ColorMode"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Style TargetType="CheckBox">
            <Setter Property="Margin">
                <Setter.Value>
                    <Thickness>
                        0,3,0,3
                    </Thickness>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Margin">
                <Setter.Value>
                    <Thickness>
                        0,2,5,2
                    </Thickness>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Indented" TargetType="FrameworkElement">
            <Setter Property="Margin">
                <Setter.Value>
                    <Thickness>
                        10,0,0,0
                    </Thickness>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Header" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin">
                <Setter.Value>
                    <Thickness>
                        0,0,0,3
                    </Thickness>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SectionHeader" TargetType="TextBlock">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin">
                <Setter.Value>
                    <Thickness>
                        0,4,0,4
                    </Thickness>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="{Binding ExitCommand}"/>
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="360"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <TabControl Margin="2">
            <TabItem Header="MaterialColor" >
                <StackPanel Orientation="Vertical" Style="{StaticResource Indented}">
                    <CheckBox Content="_Enable" IsChecked="{Binding MaterialState.Enabled}" Margin="0,5" />

                    <TextBlock Text="Color mode:" Margin="0,5"/>
                    <ComboBox x:Name="colorModeComboBox" Width="120" HorizontalAlignment="Left" Style="{StaticResource Indented}" IsEnabled="{Binding MaterialState.Enabled}"
                              SelectedItem="{Binding MaterialState.ColorMode}" ItemsSource="{Binding Source={StaticResource dataFromEnum}}"/>

                    <CheckBox Content="_Legacy tile color handling" IsChecked="{Binding MaterialState.LegacyTileColorHandling}" Margin="0,10"/>

                    <TextBlock Text="Advanced:" Style="{StaticResource SectionHeader}"/>

                    <StackPanel Style="{StaticResource Indented}" >
                        <CheckBox IsChecked="{Binding MaterialState.ShowMissingElementColorInfos}" IsEnabled="{Binding MaterialState.Enabled}" AutomationProperties.AcceleratorKey="c" >
                            <TextBlock>
                                Show missing <LineBreak/> element color infos
                            </TextBlock>
                        </CheckBox>

                        <CheckBox IsChecked="{Binding MaterialState.ShowMissingTypeColorOffsets}" IsEnabled="{Binding MaterialState.Enabled}">
                            <TextBlock>
                                Show missing <LineBreak/> type color offsets
                            </TextBlock>
                        </CheckBox>

                        <CheckBox IsChecked="{Binding MaterialState.ShowBuildingsAsWhite}" IsEnabled="{Binding MaterialState.Enabled}">
                            <TextBlock>
                                Apply white <LineBreak/> to colorable objects
                            </TextBlock>
                        </CheckBox>
                    </StackPanel>
                </StackPanel>
            </TabItem>

            <TabItem Header="OnionPatcher">
                <StackPanel Orientation="Vertical" Grid.Column="1">

                    <StackPanel Orientation="Vertical" Style="{StaticResource Indented}">
                        <CheckBox Content="_Enable" IsChecked="{Binding OnionEnabled}"/>
                        <CheckBox Content="_Debug mode" IsChecked="{Binding OnionState.Debug}" IsEnabled="{Binding OnionEnabled}"/>
                        <CheckBox Content="_Free camera" IsChecked="{Binding OnionState.FreeCamera}" IsEnabled="{Binding OnionEnabled}"/>
                        <CheckBox Content="Log _seed" IsChecked="{Binding OnionState.LogSeed}" IsEnabled="{Binding OnionEnabled}"/>

                        <CheckBox Content="Custom max camera distance" Margin="0,3" IsChecked="{Binding OnionCustomMaxCamera}" IsEnabled="{Binding OnionEnabled}"/>
                        <TextBox Margin="10,2,5,2" Text="{Binding OnionState.MaxCameraDistance}" IsEnabled="{Binding OnionCustomMaxCameraEnabled}"/>

                        <CheckBox Content="Custom world dimensions (in chunks)" IsChecked="{Binding OnionCustomWorldSize}" IsEnabled="{Binding OnionEnabled}" />

                        <Grid Style="{StaticResource Indented}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="Width:" />
                            <TextBlock Text="Height:" Grid.Row="1"/>

                            <TextBox Grid.Column="1" Text="{Binding OnionState.Width}" IsEnabled="{Binding OnionCustomWorldSizeEnabled}"/>
                            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding OnionState.Height}" IsEnabled="{Binding OnionCustomWorldSizeEnabled}"/>
                        </Grid>

                        <CheckBox Content="Custom seeds" IsChecked="{Binding OnionCustomSeeds}" IsEnabled="{Binding OnionEnabled}"/>

                        <Grid Style="{StaticResource Indented}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="World:"/>
                            <TextBlock Text="Layout:" Grid.Row="1"/>
                            <TextBlock Text="Terrain:" Grid.Row="2"/>
                            <TextBlock Text="Noise:" Grid.Row="3"/>

                            <TextBox Grid.Column="1" Text="{Binding OnionState.WorldSeed}" IsEnabled="{Binding OnionCustomSeedsEnabled}"/>
                            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding OnionState.LayoutSeed}" IsEnabled="{Binding OnionCustomSeedsEnabled}"/>
                            <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding OnionState.TerrainSeed}" IsEnabled="{Binding OnionCustomSeedsEnabled}"/>
                            <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding OnionState.NoiseSeed}" IsEnabled="{Binding OnionCustomSeedsEnabled}"/>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </TabItem>

            <TabItem Header="Gas overlay">
                <StackPanel>
                    <TextBlock Text="Minimum gas color intensity (0-1)"/>
                    <TextBox Text="{Binding MaterialState.MinimumGasColorIntensity}"/>
                    <TextBlock Text="Gas pressure range (in kilograms)"/>
                    <TextBox Text="{Binding MaterialState.GasPressureStart}"/>
                    <TextBox Text="{Binding MaterialState.GasPressureEnd}"/>
                </StackPanel>
            </TabItem>
        </TabControl>
            
        <Grid Grid.Row="1" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="90"/>
            </Grid.ColumnDefinitions>

            <TextBox Margin="5" Text="{Binding Status}" IsReadOnly="True" TextWrapping="Wrap" TextChanged="OnStatusChanged" VerticalScrollBarVisibility="Visible" />
            <Button IsDefault="True" Content="_Apply" Height="40" Margin="10" Command="{Binding ApplyCommand}" Grid.Column="1" />
        </Grid>
    </Grid>
</Window>
